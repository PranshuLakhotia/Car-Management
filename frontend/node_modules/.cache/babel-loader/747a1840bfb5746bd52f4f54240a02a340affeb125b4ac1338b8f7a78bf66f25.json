{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\spyne project\\\\frontend\\\\src\\\\components\\\\CarList.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';  // If using axios directly for API requests\n\n// // Usage\n// const API_URL = 'http://localhost:5000/api/cars';\n\n// function CarList() {\n//     const [cars, setCars] = useState([]);\n//     const [search, setSearch] = useState('');\n\n//     useEffect(() => {\n//         async function fetchCars() {\n//             try {\n//                 const result = await axios.get(`${API_URL}/my-cars`);\n//                 setCars(result.data);\n//             } catch (error) {\n//                 console.error('Error fetching cars:', error);\n//             }\n//         }\n//         fetchCars();\n//     }, []);\n\n//     const filteredCars = cars.filter((car) =>\n//         car.title.toLowerCase().includes(search.toLowerCase()) ||\n//         car.description.toLowerCase().includes(search.toLowerCase()) ||\n//         car.tags.some((tag) => tag.toLowerCase().includes(search.toLowerCase()))\n//     );\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Search Cars...\"\n//                 value={search}\n//                 onChange={(e) => setSearch(e.target.value)}\n//             />\n//             <div>\n//                 {filteredCars.map((car) => (\n//                     <div key={car._id}>\n//                         <h3>{car.title}</h3>\n//                         <p>{car.description}</p>\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default CarList;\n\n// CarList.js\n\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarList = () => {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCars = async () => {\n      try {\n        const carData = await api.getCars();\n        setCars(carData);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Car List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cars.map(car => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: car.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: car.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, car.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CarList, \"Bwhc6BON5gt0N5iCb4hVdyYz28U=\");\n_c = CarList;\nexport default CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","error","setError","fetchCars","carData","getCars","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","car","title","description","id","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/spyne project/frontend/src/components/CarList.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';  // If using axios directly for API requests\r\n\r\n// // Usage\r\n// const API_URL = 'http://localhost:5000/api/cars';\r\n\r\n// function CarList() {\r\n//     const [cars, setCars] = useState([]);\r\n//     const [search, setSearch] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         async function fetchCars() {\r\n//             try {\r\n//                 const result = await axios.get(`${API_URL}/my-cars`);\r\n//                 setCars(result.data);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching cars:', error);\r\n//             }\r\n//         }\r\n//         fetchCars();\r\n//     }, []);\r\n\r\n//     const filteredCars = cars.filter((car) =>\r\n//         car.title.toLowerCase().includes(search.toLowerCase()) ||\r\n//         car.description.toLowerCase().includes(search.toLowerCase()) ||\r\n//         car.tags.some((tag) => tag.toLowerCase().includes(search.toLowerCase()))\r\n//     );\r\n\r\n//     return (\r\n//         <div>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search Cars...\"\r\n//                 value={search}\r\n//                 onChange={(e) => setSearch(e.target.value)}\r\n//             />\r\n//             <div>\r\n//                 {filteredCars.map((car) => (\r\n//                     <div key={car._id}>\r\n//                         <h3>{car.title}</h3>\r\n//                         <p>{car.description}</p>\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CarList;\r\n\r\n// CarList.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nconst CarList = () => {\r\n  const [cars, setCars] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCars = async () => {\r\n      try {\r\n        const carData = await api.getCars();\r\n        setCars(carData);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchCars();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Car List</h2>\r\n      {error && <p>{error}</p>}\r\n      <ul>\r\n        {cars.map((car) => (\r\n          <li key={car.id}>\r\n            <h3>{car.title}</h3>\r\n            <p>{car.description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarList;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMV,GAAG,CAACW,OAAO,CAAC,CAAC;QACnCL,OAAO,CAACI,OAAO,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;MACvB;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBX,KAAK,iBAAIL,OAAA;MAAAY,QAAA,EAAIP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhB,OAAA;MAAAY,QAAA,EACGT,IAAI,CAACc,GAAG,CAAEC,GAAG,iBACZlB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,EAAKM,GAAG,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBhB,OAAA;UAAAY,QAAA,EAAIM,GAAG,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFjBE,GAAG,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CA/BID,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
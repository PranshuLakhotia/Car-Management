{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\spyne project\\\\frontend\\\\src\\\\components\\\\CarDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract the car ID from the URL\n  const [car, setCar] = useState(null); // Store car details\n  const [error, setError] = useState(null); // Store error messages\n\n  // Function to fetch car details\n  useEffect(() => {\n    const fetchCarDetails = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        console.log('Authorization Token:', token);\n        const response = await axios.get(`http://localhost:5000/api/cars/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('API Response:', response.data);\n        setCar(response.data); // Set the fetched car details in state\n      } catch (err) {\n        console.error('Error in API call:', err.response || err.message);\n        setError('Failed to fetch car details'); // Set error message if fetch fails\n      }\n    };\n    fetchCarDetails(); // Fetch details on component mount\n  }, [id]); // Dependency array includes only `id`\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this); // Show error message if any\n  if (!car) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading car details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 20\n  }, this); // Show loading state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: car.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: car.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: car.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Car ${index + 1}`,\n          width: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tags: \", car.tags.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CarDetail, \"dNmVgTroiJtcYw530zkxuP+mXlI=\", false, function () {\n  return [useParams];\n});\n_c = CarDetail;\nexport default CarDetail;\nvar _c;\n$RefreshReg$(_c, \"CarDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","CarDetail","_s","id","car","setCar","error","setError","fetchCarDetails","token","localStorage","getItem","console","log","response","get","headers","Authorization","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","images","map","image","index","src","alt","width","tags","join","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/spyne project/frontend/src/components/CarDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CarDetail = () => {\r\n  const { id } = useParams(); // Extract the car ID from the URL\r\n  const [car, setCar] = useState(null); // Store car details\r\n  const [error, setError] = useState(null); // Store error messages\r\n\r\n  // Function to fetch car details\r\n  useEffect(() => {\r\n    const fetchCarDetails = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Authorization Token:', token); \r\n        const response = await axios.get(`http://localhost:5000/api/cars/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        console.log('API Response:', response.data); \r\n        setCar(response.data); // Set the fetched car details in state\r\n      } catch (err) {\r\n        console.error('Error in API call:', err.response || err.message);\r\n        setError('Failed to fetch car details'); // Set error message if fetch fails\r\n      }\r\n    };\r\n\r\n    fetchCarDetails(); // Fetch details on component mount\r\n  }, [id]); // Dependency array includes only `id`\r\n\r\n  if (error) return <p>{error}</p>; // Show error message if any\r\n  if (!car) return <p>Loading car details...</p>; // Show loading state\r\n\r\n  return (\r\n    <div>\r\n      <h1>{car.title}</h1>\r\n      <p>{car.description}</p>\r\n      <ul>\r\n        {car.images.map((image, index) => (\r\n          <li key={index}>\r\n            <img src={image} alt={`Car ${index + 1}`} width=\"200\" />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p>Tags: {car.tags.join(', ')}</p> {/* Display tags */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}